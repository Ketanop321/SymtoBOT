{"ast":null,"code":"var _jsxFileName = \"E:\\\\symtobot\\\\src\\\\components\\\\Chatbox.js\";\nimport React, { useState } from 'react';\nimport './Info.css';\nimport Diagnosis from './Diagnosis';\nimport Male from '../images/male.PNG';\nimport Female from '../images/female.PNG';\nimport { v4 as uuid } from 'uuid';\nconst Chatbox = props => {\n  // Default Props\n  const defaultSymptoms = ['Headache', 'Anxiety', 'Back Pain', 'Chest Pain', 'Depressed mood', 'Diarrhea', 'Dizziness', 'Hair loss', 'Rash', 'Red eye', 'Sneezing', 'Snoring', 'Stiff neck', 'Burning skin', 'Weight gain', 'Toothache', 'Cough', 'Fever', 'Nosebleeds', 'Chills', 'Excessive sweating', 'Nausea', 'Vomiting', 'Fatigue', 'Hiccups'];\n  const {\n    symptoms = defaultSymptoms\n  } = props;\n\n  // State management using Hooks\n  const [gender, setGender] = useState('male');\n  const [age, setAge] = useState(18);\n  const [symptomStatus, setSymptomStatus] = useState(Array(symptoms.length).fill('absent'));\n  const [color, setColor] = useState(Array(symptoms.length).fill(false));\n  const [submitted, setSubmitted] = useState(false);\n\n  // Functions for gender selection\n  const selectMale = () => setGender('male');\n  const selectFemale = () => setGender('female');\n\n  // Handle age change\n  const handleChange = event => setAge(event.target.value);\n\n  // Change symptom status and color\n  const changeStatus = symptom => {\n    const index = symptoms.indexOf(symptom);\n    const newSymptomStatus = [...symptomStatus];\n    const newColor = [...color];\n    newSymptomStatus[index] = 'present';\n    newColor[index] = true;\n    setSymptomStatus(newSymptomStatus);\n    setColor(newColor);\n  };\n\n  // Handle form submission\n  const handleSubmit = () => setSubmitted(true);\n\n  // Get color for symptoms\n  const getColor = symptom => {\n    const index = symptoms.indexOf(symptom);\n    return symptomStatus[index] === 'present' ? 'rgb(92, 156, 252)' : 'rgb(137, 183, 252)';\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, submitted && /*#__PURE__*/React.createElement(Diagnosis, {\n    sex: gender,\n    age: age,\n    symptomStatus: symptomStatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-General\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Information-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Please Select Your Sex: \", gender), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-Genders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-Gender\",\n    style: {\n      backgroundColor: gender === 'male' ? 'rgb(180, 180, 180)' : 'rgb(223, 223, 223)'\n    },\n    onClick: selectMale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: Male,\n    className: \"Information-Male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-Gender\",\n    style: {\n      backgroundColor: gender === 'female' ? 'rgb(180, 180, 180)' : 'rgb(223, 223, 223)'\n    },\n    onClick: selectFemale,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    alt: \"\",\n    src: Female,\n    className: \"Information-Female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Information-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, \"Please Select Your Age: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-Age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"range\",\n    className: \"Information-AgeSlider\",\n    id: \"age\",\n    min: \"0\",\n    max: \"130\",\n    value: age,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"Information-AgeText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, age))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-Symptoms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"Information-Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, \"Please Select Your Symptoms:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Information-SymptomList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, symptoms.map(symptom => /*#__PURE__*/React.createElement(\"div\", {\n    key: uuid(),\n    id: symptom,\n    className: \"Information-Symptom\",\n    style: {\n      backgroundColor: color[symptoms.indexOf(symptom)] ? 'rgb(92, 156, 252)' : 'rgb(137, 183, 252)'\n    },\n    onClick: () => changeStatus(symptom),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, symptom))), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"Information-Submit\",\n    type: \"submit\",\n    value: \"Submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Chatbox;","map":{"version":3,"names":["React","useState","Diagnosis","Male","Female","v4","uuid","Chatbox","props","defaultSymptoms","symptoms","gender","setGender","age","setAge","symptomStatus","setSymptomStatus","Array","length","fill","color","setColor","submitted","setSubmitted","selectMale","selectFemale","handleChange","event","target","value","changeStatus","symptom","index","indexOf","newSymptomStatus","newColor","handleSubmit","getColor","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","sex","style","backgroundColor","onClick","alt","src","type","id","min","max","onChange","map","key"],"sources":["E:/symtobot/src/components/Chatbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Info.css';\r\nimport Diagnosis from './Diagnosis';\r\nimport Male from '../images/male.PNG';\r\nimport Female from '../images/female.PNG';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst Chatbox = (props) => {\r\n  // Default Props\r\n  const defaultSymptoms = [\r\n    'Headache', 'Anxiety', 'Back Pain', 'Chest Pain', 'Depressed mood', 'Diarrhea', 'Dizziness', 'Hair loss', 'Rash',\r\n    'Red eye', 'Sneezing', 'Snoring', 'Stiff neck', 'Burning skin', 'Weight gain', 'Toothache', 'Cough', 'Fever', \r\n    'Nosebleeds', 'Chills', 'Excessive sweating', 'Nausea', 'Vomiting', 'Fatigue', 'Hiccups',\r\n  ];\r\n  \r\n  const { symptoms = defaultSymptoms } = props;\r\n\r\n  // State management using Hooks\r\n  const [gender, setGender] = useState('male');\r\n  const [age, setAge] = useState(18);\r\n  const [symptomStatus, setSymptomStatus] = useState(Array(symptoms.length).fill('absent'));\r\n  const [color, setColor] = useState(Array(symptoms.length).fill(false));\r\n  const [submitted, setSubmitted] = useState(false);\r\n\r\n  // Functions for gender selection\r\n  const selectMale = () => setGender('male');\r\n  const selectFemale = () => setGender('female');\r\n\r\n  // Handle age change\r\n  const handleChange = (event) => setAge(event.target.value);\r\n\r\n  // Change symptom status and color\r\n  const changeStatus = (symptom) => {\r\n    const index = symptoms.indexOf(symptom);\r\n    const newSymptomStatus = [...symptomStatus];\r\n    const newColor = [...color];\r\n\r\n    newSymptomStatus[index] = 'present';\r\n    newColor[index] = true;\r\n\r\n    setSymptomStatus(newSymptomStatus);\r\n    setColor(newColor);\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = () => setSubmitted(true);\r\n\r\n  // Get color for symptoms\r\n  const getColor = (symptom) => {\r\n    const index = symptoms.indexOf(symptom);\r\n    return symptomStatus[index] === 'present' ? 'rgb(92, 156, 252)' : 'rgb(137, 183, 252)';\r\n  };\r\n\r\n  return (\r\n    <div className='Information'>\r\n      {submitted && <Diagnosis sex={gender} age={age} symptomStatus={symptomStatus} />}\r\n      <div className='Information-General'>\r\n        <h1 className='Information-Title'>Please Select Your Sex: {gender}</h1>\r\n        <div className='Information-Genders'>\r\n          <div\r\n            className='Information-Gender'\r\n            style={{ backgroundColor: gender === 'male' ? 'rgb(180, 180, 180)' : 'rgb(223, 223, 223)' }}\r\n            onClick={selectMale}\r\n          >\r\n            <img alt=\"\" src={Male} className='Information-Male'></img>\r\n          </div>\r\n          <div\r\n            className='Information-Gender'\r\n            style={{ backgroundColor: gender === 'female' ? 'rgb(180, 180, 180)' : 'rgb(223, 223, 223)' }}\r\n            onClick={selectFemale}\r\n          >\r\n            <img alt=\"\" src={Female} className='Information-Female'></img>\r\n          </div>\r\n        </div>\r\n\r\n        <h1 className='Information-Title'>Please Select Your Age: </h1>\r\n        <div className='Information-Age'>\r\n          <input\r\n            type=\"range\"\r\n            className=\"Information-AgeSlider\"\r\n            id=\"age\"\r\n            min=\"0\"\r\n            max=\"130\"\r\n            value={age}\r\n            onChange={handleChange}\r\n          />\r\n          <h2 className='Information-AgeText'>{age}</h2>\r\n        </div>\r\n      </div>\r\n\r\n      <div className='Information-Symptoms'>\r\n        <h1 className='Information-Title'>Please Select Your Symptoms:</h1>\r\n        <div className='Information-SymptomList'>\r\n          {symptoms.map((symptom) => (\r\n            <div\r\n              key={uuid()}\r\n              id={symptom}\r\n              className=\"Information-Symptom\"\r\n              style={{ backgroundColor: color[symptoms.indexOf(symptom)] ? 'rgb(92, 156, 252)' : 'rgb(137, 183, 252)' }}\r\n              onClick={() => changeStatus(symptom)}\r\n            >\r\n              {symptom}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <input\r\n          className=\"Information-Submit\"\r\n          type=\"submit\"\r\n          value=\"Submit\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}