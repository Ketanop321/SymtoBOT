{"ast":null,"code":"var _jsxFileName = \"E:\\\\symtobot\\\\src\\\\components\\\\Diagnosis.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './Diagnosis.css';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Diagnosis = props => {\n  _s();\n  const [conditions, setConditions] = useState([]);\n  useEffect(() => {\n    const fetchDiagnosis = async () => {\n      const patientData = {\n        sex: props.sex,\n        age: {\n          value: parseInt(props.age, 10)\n        },\n        evidence: props.symptomStatus.map((status, index) => ({\n          id: `s_${[21, 120, 1190, 50, 169, 8, 370, 121, 417, 492, 715, 67, 418, 1165, 226, 551, 102, 98, 1429, 81, 216, 156, 305, 2100, 1295][index]}`,\n          choice_id: status\n        }))\n      };\n      const options = {\n        url: 'https://api.infermedica.com/v3/diagnosis',\n        method: 'POST',\n        headers: {\n          'App-Id': process.env.REACT_APP_API_ID,\n          'App-Key': process.env.REACT_APP_API_KEY,\n          'Content-Type': 'application/json'\n        },\n        data: JSON.stringify(patientData)\n      };\n      try {\n        const response = await axios.request(options);\n        setConditions(response.data.conditions);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchDiagnosis();\n  }, [props.sex, props.age, props.symptomStatus]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Diagnosis\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"close-btn\",\n        onClick: props.onClose,\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Potential Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), conditions.length > 0 ? conditions.map(condition => /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: condition.name\n      }, uuid(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 41\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Diagnosis, \"QnXjvDdOKjdD2PqOOwl8x9hzEyo=\");\n_c = Diagnosis;\nexport default Diagnosis;\nvar _c;\n$RefreshReg$(_c, \"Diagnosis\");","map":{"version":3,"names":["React","useState","useEffect","axios","v4","uuid","jsxDEV","_jsxDEV","Diagnosis","props","_s","conditions","setConditions","fetchDiagnosis","patientData","sex","age","value","parseInt","evidence","symptomStatus","map","status","index","id","choice_id","options","url","method","headers","process","env","REACT_APP_API_ID","REACT_APP_API_KEY","data","JSON","stringify","response","request","error","console","className","children","onClick","onClose","fileName","_jsxFileName","lineNumber","columnNumber","length","condition","name","_c","$RefreshReg$"],"sources":["E:/symtobot/src/components/Diagnosis.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './Diagnosis.css';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst Diagnosis = (props) => {\r\n  const [conditions, setConditions] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchDiagnosis = async () => {\r\n      const patientData = {\r\n        sex: props.sex,\r\n        age: { value: parseInt(props.age, 10) },\r\n        evidence: props.symptomStatus.map((status, index) => ({\r\n          id: `s_${[21, 120, 1190, 50, 169, 8, 370, 121, 417, 492, 715, 67, 418, 1165, 226, 551, 102, 98, 1429, 81, 216, 156, 305, 2100, 1295][index]}`,\r\n          choice_id: status,\r\n        })),\r\n      };\r\n\r\n      const options = {\r\n        url: 'https://api.infermedica.com/v3/diagnosis',\r\n        method: 'POST',\r\n        headers: {\r\n          'App-Id': process.env.REACT_APP_API_ID,\r\n          'App-Key': process.env.REACT_APP_API_KEY,\r\n          'Content-Type': 'application/json',\r\n        },\r\n        data: JSON.stringify(patientData),\r\n      };\r\n\r\n      try {\r\n        const response = await axios.request(options);\r\n        setConditions(response.data.conditions);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchDiagnosis();\r\n  }, [props.sex, props.age, props.symptomStatus]);\r\n\r\n  return (\r\n    <div className='Diagnosis'>\r\n      <div className='modal'>\r\n        <button className='close-btn' onClick={props.onClose}>&times;</button>\r\n        <h1>Potential Diagnosis</h1>\r\n        {conditions.length > 0 ? (\r\n          conditions.map((condition) => <h2 key={uuid()}>{condition.name}</h2>)\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Diagnosis;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}